# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ master ]
  # pull_request:
  #   branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      env:
        description: 'Envrionment: erp|en|demo|uat'
        required: true
        default: 'en'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: tony84727/changed-file-filter@0.0.3
        id: filter
        with:
          filters: |
            folder1:
              - 'folder1/**/*'
            folder2:
              - 'folder2/**/*'

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Test
        run: |
          echo '${{ steps.file_changes.outputs.files}}'
          echo folder 1 = '${{ steps.filter.outputs.folder1}}'
          echo folder 2 = '${{ steps.filter.outputs.folder2}}'

      - name: Do job 1
        if: steps.filter.outputs.folder1 == 'true'
        run: echo job 1

      - name: Do job 2
        if: steps.filter.outputs.folder2 == 'true'
        run: echo job 2

      # Runs manually triggered workflow
      - name: Run manually triggered workflow
        run: echo "Hello ${{ github.event.inputs.env }}!"

      # Unable to process command '::set-env name=BRANCH_NAME,::master' successfully.

      # Runs for linux
      # - name: Extract branch name
      #   run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      #   id: extract_branch

      # - name: Echo branch name
      #   if: steps.extract_branch.outputs.branch == 'master'
      #   run: echo ${{ steps.extract_branch.outputs.branch }}

      # Runs for windows
      - name: Extract branch name
        run: |
          $branchName = "${{github.ref}}".Split("/")["${{github.ref}}".Split("/").Length -1]
          echo "::set-output name=CURRENT_BRANCH::$(echo $branchName)"
        id: extract_branch

      - name: Echo branch name
        run: echo ${{ steps.extract_branch.outputs.branch }}

      - name: Echo branch name
        if: steps.extract_branch.outputs.branch == 'master'
        run: echo ${{ steps.extract_branch.outputs.branch }}

      # - name: SET CURRENT_BRANCH
      #   run: |
      #     $branchName = "${{github.ref}}".Split("/")["${{github.ref}}".Split("/").Length -1]
      #     echo "::set-env name=CURRENT_BRANCH::$(echo $branchName)"

      # - name: Echo branch name
      #   if: env:tag == 'master'
      #   run: echo "${env:tag}"


      # Setup Node.js environment
      # - name: Use Node.js ${{ matrix.node-version }}
      # - name: Setup Node.js environment
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: 12.x
      #     registry-url: https://registry.npmjs.org/

      # - name: Hello world
      #   run: npm run test
      #   env:
      #     FIRST_NAME: Mona
      #     middle_name: The
      #     Last_Name: Octocat

      # - name: Hello world
      #   run: echo Hello world $FIRST_NAME $middle_name $Last_Name!
      #   env:
      #     FIRST_NAME: Eden
      #     Last_Name: Wang

      # - name: Run UAT environment e2e test
      #   if: github.event.inputs.env == 'uat'
      #   run: |
      #     touch .env
      #     pwd
      #     cat .env
      #   env:
      #     E2E_HOST: https://uat.nested.co.th
      #     EMAIL: admin@nested.co.th
      #     PASSWORD: ${{ secrets.UAT_PASSWORD }}

      # - name: Run EN environment e2e test
      #   if: github.event.inputs.env == 'en'
      #   run: |
      #     touch .env
      #     pwd
      #     cat .env
      #   env:
      #     E2E_HOST: https://en.nested.co.th
      #     EMAIL: admin@ambrosia.com
      #     PASSWORD: ${{ secrets.PROD_PASSWORD }}
          
      # - name: Run e2e test
      #   run: |
      #     pwd
      #     cat .env
      #     npm i
      #     npm run webdriver-update -- --standalone false --gecko false
      #     npm run e2e.ci

